<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ash Furrow</title>
  <id>https://ashfurrow.com/blog</id>
  <link href="https://ashfurrow.com/"/>
  <link href="https://ashfurrow.com/feed.xml" rel="self"/>
  <updated>2016-11-13T23:01:57+00:00</updated>
  <author>
    <name>Ash Furrow</name>
  </author>
  <entry>
    <title>The Swift Alps &amp; ReSwift</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/the-swift-alps-reswift/"/>
    <id>https://ashfurrow.com/blog/the-swift-alps-reswift/</id>
    <published>2016-11-13T23:01:57+00:00</published>
    <updated>2016-11-13T23:01:57+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve wanted to expand my expertise outside of just mobile development for a while now, and a few months ago I got the opportunity to begin building a large new feature in an existing &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; app for the Artsy Auctions platform. I was &lt;em&gt;extra&lt;/em&gt; excited because the feature&amp;rsquo;s purpose is to make running auctions easier for my colleagues on the operations team, so every line of code I write makes their lives just a little easier. It&amp;rsquo;s been a very rewarding experience.&lt;/p&gt;

&lt;p&gt;The React app in question uses &lt;a href="http://redux.js.org"&gt;Redux&lt;/a&gt;, a state-management framework that I&amp;rsquo;ve grown quite fond of. The library itself is so small that it&amp;rsquo;s more accurately described as an &lt;em&gt;idea&lt;/em&gt; rather than a framework. And lo, Redux has an implementation in Swift called &lt;a href="https://github.com/ReSwift/ReSwift"&gt;ReSwift&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;My friend Junior decided to run an experimental, workshop-based, collaborative learning conference called &lt;a href="http://theswiftalps.com"&gt;The Swift Alps&lt;/a&gt;. He asked me to be a mentor for the conference and I was honoured to oblige. I decided to use ReSwift in my workshops as a way to explore several other important aspects of iOS and Swift development.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explore alternative ways to manage application state in iOS apps.&lt;/li&gt;
&lt;li&gt;Imbue participants with a sense of community-driven software development.&lt;/li&gt;
&lt;li&gt;Normalize the GitHub model of fork/commit/pull request.&lt;/li&gt;
&lt;li&gt;Discover friction points involved in using non-UIKit inspired abstractions for managing state.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&amp;ldquo;UIKit is very opinionated and those opinions are often not very good&amp;rdquo; &lt;a href="https://twitter.com/ashfurrow"&gt;@ashfurrow&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/swiftalps?src=hash"&gt;#swiftalps&lt;/a&gt;&lt;/p&gt;&amp;mdash; Roy Marmelstein (@marmelroy) &lt;a href="https://twitter.com/marmelroy/status/797007786047639553"&gt;November 11, 2016&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Importantly, my goal was not to &lt;em&gt;convince&lt;/em&gt; people to use ReSwift or Redux style state management in Swift; instead, I only wanted to use ReSwift as a way to explore what was possible in terms of state management and demonstrate how software teams can work together to accomplish common goals. In that spirit, I reached out to ReSwift core maintainer &lt;a href="https://twitter.com/benjaminencz"&gt;Benjamin Encz&lt;/a&gt; to see what sorts of ideas they might have, or chores we could accomplish for them. I distilled their wishlist down to three main goals:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Extend an &lt;a href="https://github.com/ReSwift/CounterExample"&gt;existing iOS example app&lt;/a&gt;, from displaying/manipulating one counter, to several.&lt;/li&gt;
&lt;li&gt;Add an iOS target to an &lt;a href="https://github.com/ReSwift/ReSwift-Todo-Example"&gt;existing macOS example app&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Build a brand new iOS application that used networking to explore asynchronous state changes in ReSwift.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It was ambitious. I had planned three two-hour sessions, each with a fresh batch of participants, each one building upon the work of the others (just like real software development). What the final products would look like, I didn&amp;rsquo;t know, but we were going to try, fail, and learn. Together.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t want this to be like a typical workshop where I direct people to accomplish preset tasks. Instead, I wanted to model this off of the weekly &lt;a href="https://artsy.github.io/blog/2015/08/10/peer-lab/"&gt;peer lab&lt;/a&gt; that I help run on Saturday mornings. As a group, we broke down the goals into tasks that groups of two or three participants worked on. They reviewed each others&amp;rsquo; pull requests, coordinated, and handled merge conflicts. I was only there to facilitate.&lt;/p&gt;

&lt;p&gt;We accomplished the first goal and made some progress towards the second. Sadly, slow wifi and Xcode problems hampered transforming the macOS app into a macOS/iOS app. We didn&amp;rsquo;t end up building a new app. Despite these challenges, we learned a lot.&lt;/p&gt;

&lt;p&gt;Most of the work went into the first task: augmenting a simple counting application from being able to count one thing at a time to being able to count several things at once. This transition from one counter to many counters is commonly used in Redux web tutorials to graduate from simple to complex state; I wanted to repeat the process for ReSwift. By the end of the day, we had a full app that used ReSwift to full effect, including named counters, dynamic table view reloading based on LCS algorithms, Redux-style selectors, and state persistence.&lt;/p&gt;



&lt;p&gt;&lt;img src="https://ashfurrow.com/img/blog/the-swift-alps-reswift/screenshot.png" alt="Screenshot of finished app" /&gt;&lt;/p&gt;



&lt;p&gt;We tried, failed, and tried again. When I ran out of ideas to augment the app, participants helped me out by coming up with their own goals and distributing work between groups. I was surprised and humbled by how quickly the participants – mostly strangers – were able to come together and form well-functioning teams.&lt;/p&gt;

&lt;p&gt;The counter app does a lot more than I had originally intended, and it&amp;rsquo;s now probably too complex to serve as a simple introduction to ReSwift. That&amp;rsquo;s okay, it can &lt;a href="https://github.com/TheSwiftAlps/CounterExample"&gt;sit alongside the original&lt;/a&gt; as a learning resource for others.&lt;/p&gt;

&lt;p&gt;I like Redux, and ReSwift is a great implementation of the idea. I&amp;rsquo;m undergoing a &lt;a href="https://github.com/artsy/eigen/pull/1985"&gt;switch to ReSwift in our auctions code&lt;/a&gt;. ReDux appears to clash with UIKit in only the expected ways that a non-UIKit library would, and the simplicity of the framework helps to minimize dependencies within our large app.&lt;/p&gt;

&lt;p&gt;If I were to repeat this workshop, I would do a lot of the groundwork for creating a universal iOS/macOS app, since that became a large time sink. I feel bad that the time put into Xcode project configuration could have been spent exploring more interesting problems. However, the workshop format of having an &lt;em&gt;idea&lt;/em&gt; of the goal but not an exact destination or path in mind made the journey more educational, and more fun for everyone.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m excited to return to New York and the Auctions team, and bring with me a renewed appreciation for what Redux can accomplish. Travelling often leaves me tired, and I do feel a bit foggy now, but my spirit hasn&amp;rsquo;t been as high in quite a while. I&amp;rsquo;m looking forward to sharing this enthusiasm with the rest of my team.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Monet.app</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/monet-app/"/>
    <id>https://ashfurrow.com/blog/monet-app/</id>
    <published>2016-10-30T01:18:55+00:00</published>
    <updated>2016-10-30T01:18:55+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;I heard about a cool &lt;a href="http://www.iflscience.com/plants-and-animals/website-helps-you-identify-birds-looking-your-photo/"&gt;website that can identify the species of bird from a photo&lt;/a&gt;. It&amp;rsquo;s an impressive feat of computer vision research, but it&amp;rsquo;s not an entirely automated process.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;Once users have taken a photo, they draw a box around the bird, click its bill, eye and tail and tell [the website] where and when the photo was taken.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;This idea of automating tasks &lt;em&gt;just enough&lt;/em&gt; to augment human capabilities has been on my mind since I met &lt;a href="https://twitter.com/joetastic"&gt;Joe Carrafa&lt;/a&gt;, the Engineering Manager of Applied Research at Warby Parker. A lot of applied research in our field is interested in AI/machine learning and automation.&lt;/p&gt;

&lt;p&gt;We discussed the fascinating idea of &lt;em&gt;semi-autonomous&lt;/em&gt; programs. Like &lt;em&gt;almost&lt;/em&gt; artificial intelligence. A little bit of human input and the computer fills in the rest. There are some things that humans are really good at but are intractable for computers. Humans can fill in the gap in the computers&amp;rsquo; capabilities, and then computers can automate the parts that are difficult for humans.&lt;/p&gt;

&lt;p&gt;A lot has already been said on the topic of automation, like this awesome video, but I want to talk about automation from an artistic perspective.&lt;/p&gt;



&lt;div class='embed-responsive embed-responsive-16by9'&gt;&lt;iframe src='//www.youtube.com/embed/7Pq-S557XQU' frameborder='0' allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;



&lt;p&gt;Researchers have built &lt;a href="http://thenextweb.com/creativity/2015/08/31/machine-or-picasso-this-algorithm-can-transform-photos-into-fine-art/"&gt;algorithms that transform photos into Van Gogh paintings&lt;/a&gt;. Google has &lt;a href="http://www.theverge.com/2016/6/1/11829678/google-magenta-melody-art-generative-artificial-intelligence"&gt;created an AI that composes music&lt;/a&gt;. There are &lt;a href="https://github.com/alexjc/neural-doodle"&gt;open source projects that generate Monet paintings from MS-Paint&lt;/a&gt;. How cool is that!&lt;/p&gt;

&lt;p&gt;People worry about what you could call an &amp;ldquo;art of the gaps.&amp;rdquo; This is the scenario where human creativity is relegated to the shrinking gaps between what hasn&amp;rsquo;t yet been automated by technology. &lt;/p&gt;

&lt;p&gt;I share this worry, I think most technologists should, but like most technologists I can&amp;rsquo;t help but be excited, too. Because new technology doesn&amp;rsquo;t just automate things; new technology creates &lt;em&gt;new ways to be creative&lt;/em&gt;. Let me explain. &lt;/p&gt;

&lt;p&gt;Take photography for example. Right now, photography is one of the most widely practiced forms of art in history because of the ubiquity of camera phones. Some are concerned that the ease of taking pictures has come at the cost of creative freedom. They&amp;rsquo;re right, image processing algorithms have replaced darkrooms and have removed a lot of creative control from photography. &lt;/p&gt;

&lt;p&gt;But it&amp;rsquo;s not all bad! Photography has &lt;em&gt;exploded&lt;/em&gt; as an art form. And there are now &lt;em&gt;new types&lt;/em&gt; of photography, too. We now have Instagram stars and artists &lt;a href="http://petapixel.com/2016/01/23/this-artist-got-90k-instagram-followers-with-photos-of-a-fake-lavish-lifestyle/"&gt;parodying Instagram stars&lt;/a&gt; and cool discussions about &lt;a href="http://petapixel.com/2015/05/26/richard-prince-is-a-jerk/"&gt;&amp;ldquo;what is art?&amp;rdquo;&lt;/a&gt; and all kinds of new stuff!&lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s &lt;em&gt;awesome&lt;/em&gt; that smartphones helped to proliferate photography as a casual form of art. I still enjoy a darkroom, but there are clear benefits to what smartphones have done for photography. It&amp;rsquo;s not just that photography is easier, it&amp;rsquo;s different now.&lt;/p&gt;

&lt;p&gt;Automation is going to keep supplementing human activity, including forms of labour and forms of art. In art&amp;rsquo;s case, I think the benefits far, far outweigh the costs.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Swift on Linux</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/swift-on-linux/"/>
    <id>https://ashfurrow.com/blog/swift-on-linux/</id>
    <published>2016-10-23T17:12:43+00:00</published>
    <updated>2016-10-23T17:12:43+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;All the cool kids are experimenting with Swift on Linux and I&amp;rsquo;ve always meant to but never got around to it. After watching &lt;a href="https://speakerdeck.com/subdigital/swift-on-linux"&gt;Ben Scheirman&amp;rsquo;s talk&lt;/a&gt; on the subject, I decided to give it a shot. &lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;At first I tried to use Vagrant and download one of the pre-built Swift binaries for Linux. But the configuration was difficult, and I ultimately couldn&amp;rsquo;t get it to work. Then I tried Docker.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-conversation="none" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/NeoNacho"&gt;@NeoNacho&lt;/a&gt; &lt;a href="https://twitter.com/ashfurrow"&gt;@ashfurrow&lt;/a&gt; the easiest s way to start is with something like swiftdocker, then you know versions are right&lt;/p&gt;&amp;mdash; Daniel Dunbar (@daniel_dunbar) &lt;a href="https://twitter.com/daniel_dunbar/status/789879904925921280"&gt;October 22, 2016&lt;/a&gt;&lt;/blockquote&gt; 

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;I don&amp;rsquo;t know the finer points of how Vagrant and Docker differ – but as far as I can tell they&amp;rsquo;re both tools for managing virtual machines, or VMs. A VM is like a computer that runs inside your computer.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a &lt;a href="https://github.com/swiftdocker/docker-swift"&gt;prebuilt Docker image&lt;/a&gt; for running Swift on Linux that I tried out.&lt;/p&gt;

&lt;p&gt;First I had to &lt;a href="https://docs.docker.com/docker-for-mac/"&gt;download Docker for macOS&lt;/a&gt;. I had some trouble installing with Homebrew, I definitely recommend just downloading the Docker.app from their site.&lt;/p&gt;

&lt;p&gt;Next I had to set up the VM. This means downloading the VM image – which is like the disk contents of a freshly installed Linux machine. To do this, use the &lt;code&gt;docker run&lt;/code&gt; command. This will download the image and create the VM for you, along with some initial setup. The docker-swift readme is a bit incomplete, I had to use the following command:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run -p 8000:8000 -v /Users:/Users --privileged -i -t --name swiftfun swiftdocker/swift:latest /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p 8000:8000&lt;/code&gt;&lt;/strong&gt; means &amp;ldquo;map port 8000 of the VM to port 8000 on my actual computer.&amp;rdquo; This lets use access the web server of &lt;a href="https://github.com/subdigital/swift-rock-paper-scissors"&gt;Ben Scheirman&amp;rsquo;s sample project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v /Users:/Users&lt;/code&gt;&lt;/strong&gt; means &amp;ldquo;map the &lt;code&gt;/Users&lt;/code&gt; directory of my actual system to the &lt;code&gt;/Users&lt;/code&gt; directory of the VM.&amp;rdquo; This lets us access files stored in &lt;code&gt;/Users&lt;/code&gt; on my Mac from within the VM. So I could use Xcode to write Swift, and then compile and run it from the Linux VM. Neat!&lt;/li&gt;
&lt;li&gt;Not sure what &lt;strong&gt;&lt;code&gt;--privileged&lt;/code&gt;&lt;/strong&gt; means, it&amp;rsquo;s apparently the subject of &lt;a href="http://obrown.io/2016/02/15/privileged-containers.html"&gt;some debate&lt;/a&gt; but the docker-swift Readme has it so I used it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/strong&gt; means &amp;ldquo;interactive&amp;rdquo; and it keeps the STDIN strem open when docker isn&amp;rsquo;t attached. Not entirely sure why that&amp;rsquo;s important.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/strong&gt; looks important for nerdy terminal reasons. Again, included in the docker-swift Readme so I used it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;--name swiftfun&lt;/code&gt;&lt;/strong&gt; sets the name of your new VM, &lt;code&gt;swiftfun&lt;/code&gt; was recommended by docker-swift.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;swiftdocker/swift:latest&lt;/code&gt;&lt;/strong&gt; tells Docker where to download the VM image from.&lt;/li&gt;
&lt;li&gt;I think &lt;strong&gt;&lt;code&gt;/bin/bash&lt;/code&gt;&lt;/strong&gt; tells the VM which shell to use, another thing I don&amp;rsquo;t quite understand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After running that command, I was logged into the VM.&lt;/p&gt;

&lt;p&gt;To start and attach to the Docker VM after the first time, I would run:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker start swiftfun
docker attach swiftfun
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I had to experiment with the &lt;code&gt;docker run&lt;/code&gt; command; because it does some set up that is hard to replicate after the VM is created, I created several VMs before I got it right. Every time I had to rename or delete the old ones.&lt;/p&gt;

&lt;p&gt;So after creating the VM and attaching to it, I need to clone the sample project in a shared folder.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /Users/ash/bin/swift-on-linux
git clone https://github.com/subdigital/swift-rock-paper-scissors.git
&lt;span class="nb"&gt;cd &lt;/span&gt;swift-rock-paper-scissors/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next up, the sample project has some dependencies, which in turn require some Linux libraries to be installed. These two commands retrieved the latest list of packages and then installed themes required for the sample project to compile.&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install -y libcurl4-openssl-dev uuid-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cool! Then, following the instructions from the Readme build and run the sample app:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;swift build
./.build/debug/rps --web
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally I went to a normal web browser and typed in &lt;code&gt;http://localhost:8000&lt;/code&gt; to see the results.&lt;/p&gt;



&lt;p&gt;&lt;img src="https://ashfurrow.com/img/blog/swift-on-linux/screenshot.png" alt="Screenshot of app" /&gt;&lt;/p&gt;



&lt;p&gt;Thanks again for everyone who chimed in on Twitter! I&amp;rsquo;m going to keep poking around, I don&amp;rsquo;t know if running Swift on Linux is something I want to explore more, but it was fun to get this far, so who knows 😄&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Contempt in Swift</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/contempt-in-swift/"/>
    <id>https://ashfurrow.com/blog/contempt-in-swift/</id>
    <published>2016-10-17T14:02:33+00:00</published>
    <updated>2016-10-17T14:02:33+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;You should read this fascinating article on &lt;a href="http://blog.aurynn.com/contempt-culture"&gt;contempt culture in programming communities&lt;/a&gt;, specifically Python. It details the dynamics of having contempt for another programming language and for the developers who use it. The article describes the toxicity of this culture and the obvious result: exclusion.&lt;/p&gt;

&lt;p&gt;A community can&amp;rsquo;t be both welcoming &lt;em&gt;and&lt;/em&gt; be exclusive of those who have other preferences.&lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s worth exploring the idea of contempt culture in the Swift community, particularly in regards to Objective-C and Objective-C developers.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Before we begin, I need to say: I&amp;rsquo;ve been a big critic of Objective-C&amp;rsquo;s. Four months before Swift&amp;rsquo;s announcement, I wrote &lt;a href="https://ashfurrow.com/blog/we-need-to-replace-objective-c/"&gt;&lt;em&gt;We Need to Replace Objective-C&lt;/em&gt;&lt;/a&gt;. I didn&amp;rsquo;t insult the language, I criticized it and detailed reasons it needed to be replaced. That’s okay. But I&amp;rsquo;ve been known to go further than technical critique: I&amp;rsquo;ve implied that Objective-C is a bad language and I&amp;rsquo;ve made fun of Objective-C developers, and that was wrong. I&amp;rsquo;m sorry.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a lot of damage caused by hating on Objective-C and Objective-C developers. Contempt of Objective-C only impedes the inclusion of others within the Swift community, which ultimately hurts the goal of spreading fluency of this awesome language. It&amp;rsquo;s self-defeating to hate on Objective-C because you love Swift.&lt;/p&gt;

&lt;p&gt;Objective-C isn&amp;rsquo;t the only target of our contempt. I regularly see developers bash JavaScript, despite the fact that it runs a significant portion of the web.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/BenjaminCoe"&gt;@BenjaminCoe&lt;/a&gt; You heard correctly, and yes we do.&lt;/p&gt;&amp;mdash; Collin Estes (@CollinEstes) &lt;a href="https://twitter.com/CollinEstes/status/738765249407504384"&gt;June 3, 2016&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;And of course, what iOS developer doesn&amp;rsquo;t love to hate on Android (even though it&amp;rsquo;s marketshare outstrips iOS by a mile). &lt;/p&gt;

&lt;p&gt;I think developers throw shade on other languages as a form of signalling. “I’m one of you, I hate them too.” It’s only human. But this othering has a significant emotional cost for those developers in those outside groups. &lt;/p&gt;

&lt;p&gt;Is it worth it? Is it worth it to mock outsiders and exclude them from our community? Individually, we might say “no”, but as a community, we have clearly answered “it is.”&lt;/p&gt;

&lt;p&gt;The original blog post&amp;rsquo;s author had a solution to the problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SHUT. UP.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I couldn&amp;rsquo;t agree more.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>We Trust Apple Too Much</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/we-trust-apple-too-much/"/>
    <id>https://ashfurrow.com/blog/we-trust-apple-too-much/</id>
    <published>2016-10-11T08:23:08+00:00</published>
    <updated>2016-10-11T08:23:08+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;A blog post in five tweets.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So we all know about Dash, eh? &lt;a href="https://blog.kapeli.com/apple-removed-dash-from-the-app-store"&gt;Apple acted rashly against an indie dev&lt;/a&gt;, &lt;a href="https://blog.kapeli.com/dash-and-apple-my-side-of-the-story"&gt;the developer called them on it&lt;/a&gt;, and the iOS developer community failed to rally behind the developer like it should have.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;There’s no proof, and no reason to believe Apple here. They mess the easy stuff up all the time, trust about big stuff is too eroded.&lt;/p&gt;&amp;mdash; Ash vs NSThread (@ashfurrow) &lt;a href="https://twitter.com/ashfurrow/status/785606500433747968"&gt;October 10, 2016&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I wrote these tweets as I waddled through security in New York, &lt;em&gt;before&lt;/em&gt; the Kapeli told their side of the story. I think we need more of this critical thinking towards Apple. Something I&amp;rsquo;ve said before:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;If you love Apple, think critically about their decisions. Question their motives and decisions. Embrace nuance, reject extremism.&lt;/p&gt;&amp;mdash; Ash vs NSThread (@ashfurrow) &lt;a href="https://twitter.com/ashfurrow/status/773856902304366592"&gt;September 8, 2016&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Matt Drance really summed the whole Dash situation up it up well:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Again, it doesn&amp;rsquo;t entirely matter if he ends up a liar. The levee broke too early. The end.&lt;/p&gt;&amp;mdash; Matt Drance (@drance) &lt;a href="https://twitter.com/drance/status/785635370939523072"&gt;October 11, 2016&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Apple is &lt;a href="https://ashfurrow.com/blog/crestfallen/"&gt;just a company&lt;/a&gt;. I know we all like them, and we want them to do well, but sometimes Apple will fail to live up to our ideals and our expectations. We&amp;rsquo;ve got to be ready to hold them accountable.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Growing Pains</title>
    <link rel="alternate" href="https://ashfurrow.com/blog/growing-pains/"/>
    <id>https://ashfurrow.com/blog/growing-pains/</id>
    <published>2016-10-09T19:06:30+00:00</published>
    <updated>2016-10-09T19:06:30+00:00</updated>
    <author>
      <name>Ash Furrow</name>
    </author>
    <content type="html">&lt;p&gt;Artsy did it&amp;rsquo;s six-monthly peer performance (performance?) reviews and I got lots of meaningful feedback, including &amp;ldquo;aww yeah, Ash is great&amp;rdquo; comments from colleagues and my manager. I want to reflect a bit on the review, my direction, and my goals.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Artsy&amp;rsquo;s process involves a self-evaluation, peer evaluations, and a meeting with one&amp;rsquo;s manager. All the feedback is non-anonymous. The evaluations measure performance and teamwork separately, but both of them against Artsy&amp;rsquo;s values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quality Worthy of Art&lt;/li&gt;
&lt;li&gt;People are Paramount&lt;/li&gt;
&lt;li&gt;Openness&lt;/li&gt;
&lt;li&gt;Positive Energy&lt;/li&gt;
&lt;li&gt;Art x Science&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I gave myself good marks for performance and great marks on teamwork. It&amp;rsquo;s a struggle to give an honest, not-depression-tinted review of my own abilities, so it was a struggled to say &amp;ldquo;I&amp;rsquo;m great.&amp;rdquo; I also said that I need to stop taking things so personally and to get better at conflict resolution.&lt;/p&gt;

&lt;p&gt;My manager told me that I was being hard on myself, that he was proud of what I had accomplished and that I had full latitude to continue working on new strategies to improve our team&amp;rsquo;s dynamics. So that was pretty cool.&lt;/p&gt;

&lt;p&gt;My goals are to continue to focus on &lt;a href="https://ashfurrow.com/blog/building-online-communities/"&gt;community-building&lt;/a&gt; and expand into manager-type responsibilities. I&amp;rsquo;m not sure if a &amp;ldquo;manager&amp;rdquo; is what I want to be, but the skills are important to acquire in either case.&lt;/p&gt;

&lt;p&gt;One other note: I dislike awkward situations, like &lt;em&gt;really&lt;/em&gt; dislike them. But my work often involves things like disagreeing with others and giving critical feedback to colleagues. Obviously no Canadian likes disagreeing with anyone, but I take it to an extreme. So I&amp;rsquo;m going to start pushing towards that awkwardness, like a kind of exposure therapy. So look forward to more unsalted opinions and blog posts even more awkward than sharing one&amp;rsquo;s peerformance review. &lt;/p&gt;
</content>
  </entry>
</feed>
